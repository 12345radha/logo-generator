{"version":3,"sources":["MainToolBar.js","GDGEditor.js","DSCEditor.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","toolBarRoot","padding","spacing","width","button","margin","toolBarButtonGroup","marginRight","selected","background","MainToolBar","props","classes","Card","className","ButtonGroup","variant","color","Tooltip","title","aria-label","placement","Button","onClick","toDark","darkMode","Brightness3","Brightness7","GDGEditor","handleDarkMode","mode","setState","state","scale","name","WebFont","load","google","families","fontactive","familyName","fvd","bwImage","colorImage","this","id","style","hidden","ref","e","GDGLogo","onLoad","src","alt","TextField","label","onChange","target","value","logoCanvas","CardActionArea","CardContent","fullLogoImg","bwImageUrl","maxWidth","CardActions","href","download","colorImageUrl","ctx","getContext","font","logoScale","canvasWidth","measureText","canvasHeight","height","setAttribute","fillStyle","drawImage","fillText","toDataURL","Component","display","DSCEditor","bwImageHorizontal","colorImageVertical","bwImageVertical","dscLogo","fullLogoUrl","marginTop","fullLogoUrlVertical","fullLogoUrlOld","fullLogoUrlVerticalOld","Math","max","ctx2","textBaseline","TabPanel","children","index","other","role","aria-labelledby","Box","p","Container","a11yProps","root","flexGrow","backgroundColor","palette","paper","ScrollableTabsButtonAuto","React","useState","setValue","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","Tab","createMuiTheme","primary","main","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.0fb1da9b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, ButtonGroup, Card, Tooltip } from '@material-ui/core';\nimport { Brightness7, Brightness3 } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    toolBarRoot: {\n        padding: theme.spacing(1),\n        width:\"100%\"\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    toolBarButtonGroup: {\n        marginRight: theme.spacing(1),\n    },\n    selected: {\n        background: \"#0f0 !important\"\n    }\n}));\n\nexport default function MainToolBar(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.toolBarRoot}>\n            <ButtonGroup variant=\"outlined\" color=\"default\" className={classes.toolBarButtonGroup}>\n                <Tooltip title=\"Go Dark\" aria-label=\"Go Dark\" placement=\"top\">\n                    <Button\n                        onClick={() => props.toDark(true)}\n                        className={ props.darkMode === true ? classes.selected : \"\"}>\n                        <Brightness3 />\n                    </Button>\n                </Tooltip>\n                <Tooltip title=\"Light Up\" aria-label=\"Light Up\" placement=\"top\">\n                    <Button\n                        onClick={() => props.toDark(false)}\n                        className={ props.darkMode === false ? classes.selected : \"\"}>\n                        <Brightness7 />\n                    </Button>\n                </Tooltip>\n            </ButtonGroup>\n        </Card>\n    );\n}","import React, { Component } from \"react\";\nimport MainToolBar from './MainToolBar'\n\nimport WebFont from \"webfontloader\";\n\nimport { Button, Card, CardContent, CardActions, CardActionArea, TextField } from '@material-ui/core';\n\nimport \"./Editor.sass\";\n\nclass GDGEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: 0.6,\n      name: \"City Name\",\n      darkMode: false\n    };\n  }\n\n  componentDidMount() {\n    WebFont.load({\n      google: {\n        families: [\"Roboto:400\", \"Product Sans\", \"Product Sans:400\"]\n      },\n      fontactive: (familyName, fvd) => {\n        this.bwImage();\n        this.colorImage();\n      }\n    });\n  }\n\n  handleDarkMode = (mode) => {\n    this.setState({ darkMode: mode });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <MainToolBar\n          toDark={this.handleDarkMode}\n          darkMode={this.state.darkMode}\n          id=\"GDGToolbar\"\n        />\n        <div style={hidden}>\n          {this.state.darkMode ? (\n            <img\n              ref={e => {\n                this.GDGLogo = e;\n              }}\n              onLoad={() => {\n                this.bwImage();\n              }}\n              src=\"assets/gdg/bw.svg\"\n              alt={`GDG Icon`}\n            />\n          ) : (\n              <img\n                ref={e => {\n                  this.GDGLogo = e;\n                }}\n                onLoad={() => {\n                  this.colorImage();\n                }}\n                src=\"assets/gdg/color.svg\"\n                alt={`GDG Icon`}\n              />\n            )}\n        </div>\n\n        <TextField\n          label=\"City Name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{\n            width: \"100%\"\n          }}\n          onChange={e => {\n            this.setState(\n              {\n                name: e.target.value\n              },\n              () => {\n                this.bwImage();\n                this.colorImage();\n              }\n            );\n          }}\n        />\n        <br />\n        <canvas\n          style={hidden}\n          ref={e => {\n            this.logoCanvas = e;\n          }}\n        />\n\n        {this.state.darkMode ? (\n          <Card style={{width: \"100%\"}}>\n            <CardActionArea style={{background: \"#000\"}}>\n              <CardContent>\n                <img\n                  ref={e => {\n                    this.fullLogoImg = e;\n                  }}\n                  alt={`GDG ${this.state.name} Logo`}\n                  src={this.state.bwImageUrl}\n                  style={{maxWidth: \"100%\"}}\n                />\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                href={this.state.bwImageUrl}\n                style={{ margin: \"5px\" }}\n                download={`GDG ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n              >\n                DOWNLOAD\n              </Button>\n            </CardActions>\n          </Card>\n        ) : (\n            <Card style={{width: \"100%\"}}>\n              <CardActionArea>\n                <CardContent>\n                  <img\n                    ref={e => {\n                      this.fullLogoImg = e;\n                    }}\n                    alt={`GDG ${this.state.name} Logo`}\n                    src={this.state.colorImageUrl}\n                    style={{maxWidth: \"100%\"}}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  href={this.state.colorImageUrl}\n                  style={{ margin: \"5px\" }}\n                  download={`GDG ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n                >\n                  DOWNLOAD\n                </Button>\n              </CardActions>\n            </Card>\n          )}\n      </div>\n    );\n  }\n\n  bwImage() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 96px \"Product Sans\"`;\n    this.logoScale = 1.35;\n\n    const canvasWidth = ctx.measureText(\"GDG\").width + ctx.measureText(this.state.name).width + this.GDGLogo.width * this.logoScale + 80;\n    const canvasHeight = this.GDGLogo.height + 80;\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    // ctx.fillStyle = \"#000\";\n    ctx.font = `400 96px \"Product Sans\"`;\n    // ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.fillStyle = \"#fff\";\n\n    ctx.drawImage(this.GDGLogo, 20, 0, this.GDGLogo.width * this.logoScale, this.GDGLogo.height * this.logoScale);\n\n    ctx.fillText(\"GDG\", this.GDGLogo.width * this.logoScale + 50, 137);\n\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx.fillText(name, this.GDGLogo.width * this.logoScale + ctx.measureText(\"GDG\").width + 70, 137);\n\n    this.setState({\n      bwImageUrl: this.logoCanvas.toDataURL()\n    });\n  }\n\n  colorImage() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 96px \"Product Sans\"`;\n\n    this.logoScale = 1.35;\n\n    const canvasWidth = ctx.measureText(\"GDG\").width + ctx.measureText(this.state.name).width + this.GDGLogo.width * this.logoScale + 80;\n    const canvasHeight = this.GDGLogo.height + 80;\n\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.6)\";\n\n    ctx.drawImage(this.GDGLogo, 20, 0, this.GDGLogo.width * this.logoScale, this.GDGLogo.height * this.logoScale);\n\n    ctx.fillText(\"GDG\", this.GDGLogo.width * this.logoScale + 50, 137);\n\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx.fillText(name, this.GDGLogo.width * this.logoScale + ctx.measureText(\"GDG\").width + 70, 137);\n\n    this.setState({\n      colorImageUrl: this.logoCanvas.toDataURL()\n    });\n  }\n}\n\nconst hidden = {\n  display: \"none\"\n};\n\nexport default GDGEditor;","import React, { Component } from \"react\";\nimport MainToolBar from './MainToolBar'\n\nimport WebFont from \"webfontloader\";\n\nimport { Button, Card, CardContent, CardActions, CardActionArea, TextField } from '@material-ui/core';\n\nimport \"./Editor.sass\";\n\nclass DSCEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: 0.5,\n      name: \"School Name\",\n      darkMode: false\n    };\n  }\n\n  componentDidMount() {\n    WebFont.load({\n      google: {\n        families: [\"Roboto:400\", \"Product Sans\", \"Product Sans:400\"]\n      },\n      fontactive: (familyName, fvd) => {\n        this.bwImageHorizontal();\n        this.colorImage();\n        this.colorImageVertical();\n        this.bwImageVertical();\n      }\n    });\n  }\n\n  handleDarkMode =  (mode) => {\n    this.setState({ darkMode: mode });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <MainToolBar\n          toDark={this.handleDarkMode}\n          darkMode={this.state.darkMode}\n          id=\"DSCToolbar\"\n          />\n        <div style={hidden}>\n          {this.state.darkMode ? (\n            <img\n              ref={e => {\n                this.dscLogo = e;\n              }}\n              onLoad={() => {\n                this.bwImageHorizontal();\n                this.bwImageVertical();\n              }}\n              src=\"assets/dsc/bw.svg\"\n              alt={`DSC Icon`}\n            />\n          ) : (\n            <img\n              ref={e => {\n                this.dscLogo = e;\n              }}\n              onLoad={() => {\n                this.colorImage();\n                this.colorImageVertical();\n              }}\n              src=\"assets/dsc/color.svg\"\n              alt={`DSC Icon`}\n            />\n          )}\n        </div>\n\n        <TextField\n          label=\"School Name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{\n              width: \"100%\"\n          }}\n          onChange={e => {\n            this.setState(\n              {\n                name: e.target.value\n              },\n              () => {\n                this.bwImageHorizontal();\n                this.colorImage();\n                this.bwImageVertical();\n                this.colorImageVertical();\n              }\n            );\n          }}\n        />\n        <br />\n        <canvas\n          style={hidden}\n          ref={e => {\n            this.logoCanvas = e;\n          }}\n        />\n\n        {this.state.darkMode ? (\n          <>\n            <Card style={{width: \"100%\"}}>\n              <CardActionArea style={{background: \"#000\"}}>\n                <CardContent>\n                  <img\n                    ref={e => {\n                      this.fullLogoImg = e;\n                    }}\n                    alt={`DSC ${this.state.name} Logo`}\n                    src={this.state.fullLogoUrl}\n                    style={{maxWidth: \"100%\"}}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  href={this.state.fullLogoUrl}\n                  style={{ margin: \"5px\" }}\n                  download={`DSC ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n                >\n                  DOWNLOAD\n                </Button>\n              </CardActions>\n            </Card>\n            <Card style={{width: \"100%\", marginTop: \"1rem\"}}>\n              <CardActionArea style={{background: \"#000\"}}>\n                <CardContent>\n                  <img\n                    ref={e => {\n                      this.fullLogoImg = e;\n                    }}\n                    alt={`DSC ${this.state.name} Logo`}\n                    src={this.state.fullLogoUrlVertical}\n                    style={{maxWidth: \"100%\"}}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  href={this.state.fullLogoUrlVertical}\n                  style={{ margin: \"5px\" }}\n                  download={`DSC ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n                >\n                  DOWNLOAD\n                </Button>\n              </CardActions>\n            </Card>\n          </>\n        ) : (\n          <>\n            <Card style={{width: \"100%\"}}>\n              <CardActionArea>\n                <CardContent>\n                  <img\n                    ref={e => {\n                      this.fullLogoImg = e;\n                    }}\n                    alt={`DSC ${this.state.name} Logo`}\n                    src={this.state.fullLogoUrlOld}\n                    style={{maxWidth: \"100%\"}}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  href={this.state.fullLogoUrlOld}\n                  style={{ margin: \"5px\" }}\n                  download={`DSC ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n                >\n                  DOWNLOAD\n                </Button>\n              </CardActions>\n            </Card>\n            <Card style={{width: \"100%\", marginTop: \"1rem\"}}>\n              <CardActionArea>\n                <CardContent>\n                  <img\n                    ref={e => {\n                      this.fullLogoImg = e;\n                    }}\n                    alt={`DSC ${this.state.name} Logo`}\n                    src={this.state.fullLogoUrlVerticalOld}\n                    style={{maxWidth: \"100%\"}}\n                  />\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  href={this.state.fullLogoUrlVerticalOld}\n                  style={{ margin: \"5px\" }}\n                  download={`DSC ${this.state.name} Dark X-Logo x${this.state.scale}.png`}\n                >\n                  DOWNLOAD\n                </Button>\n              </CardActions>\n            </Card>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  bwImageHorizontal() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 96px \"Product Sans\"`;\n\n    this.logoScale = 1.36;\n\n    const canvasWidth = Math.max(ctx.measureText(\"Developer Student Clubs\").width, ctx.measureText(this.state.name).width) + this.dscLogo.width * this.logoScale + 600;\n    const canvasHeight = this.dscLogo.height + 150;\n\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx.fillStyle = \"#fff\";\n\n    ctx.drawImage(this.dscLogo, 20, 0, this.dscLogo.width * this.logoScale, this.dscLogo.height* this.logoScale);\n\n    ctx.fillText(\"Developer Student Clubs\", this.dscLogo.width + 112, 132);\n\n    ctx.font = `400 66px \"Product Sans\"`;\n    ctx.fillText(name, this.dscLogo.width + 112, 243);\n\n    this.setState({\n      fullLogoUrl: this.logoCanvas.toDataURL()\n    });\n  }\n\n  bwImageVertical() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    const ctx2 = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 91px \"Product Sans\"`;\n    ctx2.font = `400 62px \"Product Sans\"`;\n\n    this.logoScale = 2.35;\n\n    const canvasWidth = (Math.max(ctx.measureText(\"Developer Student Clubs\").width, ctx2.measureText(name).width) + 1200 );\n    const canvasHeight = this.dscLogo.height * this.logoScale + 150;\n\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    ctx.font = `400 94px \"Product Sans\"`;\n    ctx.fillStyle = \"#fff\";\n\n    ctx.drawImage(this.dscLogo, canvasWidth/2 - (this.dscLogo.width * this.logoScale)/2, -0.25 * this.dscLogo.height * this.logoScale, this.dscLogo.width * this.logoScale, this.dscLogo.height* this.logoScale);\n\n    ctx.textBaseline = \"bottom\";\n    // ctx.textAlign = \"center\";\n    ctx.fillText(\n      \"Developer Student Clubs\",\n      canvasWidth/2 - (ctx.measureText(\"Developer Student Clubs\").width / 2),\n      this.dscLogo.height * this.logoScale + 10\n    );\n\n    ctx.font = `400 62px \"Product Sans\"`;\n    ctx.textBaseline = \"bottom\";\n    // ctx.textAlign = \"center\";\n    ctx.fillText(name, canvasWidth/2 - (ctx.measureText(name).width / 2), this.dscLogo.height * this.logoScale + 100);\n\n    this.setState({\n      fullLogoUrlVertical: this.logoCanvas.toDataURL()\n    });\n  }\n\n  colorImage() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    const ctx2 = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx2.font = `400 66px \"Product Sans\"`;\n\n    this.logoScale = 1.36;\n\n    const canvasWidth = Math.max(ctx.measureText(\"Developer Student Clubs\").width, ctx.measureText(this.state.name).width) + this.dscLogo.width * this.logoScale + 600;\n    const canvasHeight = this.dscLogo.height + 150;\n\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    ctx.font = `400 96px \"Product Sans\"`;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.54)\";\n\n    ctx.drawImage(this.dscLogo, 20, 0, this.dscLogo.width * this.logoScale, this.dscLogo.height* this.logoScale);\n\n    ctx.fillText(\"Developer Student Clubs\", this.dscLogo.width + 112, 132);\n\n    ctx.font = `400 66px \"Product Sans\"`;\n    ctx.fillText(name, this.dscLogo.width + 112, 243);\n\n    this.setState({\n      fullLogoUrlOld: this.logoCanvas.toDataURL()\n    });\n  }\n\n  colorImageVertical() {\n    const name = this.state.name;\n    const scale = this.state.scale;\n    const ctx = this.logoCanvas.getContext(\"2d\");\n    const ctx2 = this.logoCanvas.getContext(\"2d\");\n    ctx.font = `400 91px \"Product Sans\"`;\n    ctx2.font = `400 62px \"Product Sans\"`;\n\n    this.logoScale = 2.35;\n\n    const canvasWidth = (Math.max(ctx.measureText(\"Developer Student Clubs\").width, ctx2.measureText(name).width) + 1200 );\n    const canvasHeight = this.dscLogo.height * this.logoScale + 150;\n\n    this.logoCanvas.setAttribute(\"width\", canvasWidth * scale);\n    this.logoCanvas.setAttribute(\"height\", canvasHeight * scale);\n\n    ctx.scale(scale, scale);\n    ctx.font = `400 91px \"Product Sans\"`;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.54)\";\n\n    ctx.drawImage(this.dscLogo, canvasWidth/2 - (this.dscLogo.width * this.logoScale)/2, -0.25 * this.dscLogo.height * this.logoScale, this.dscLogo.width * this.logoScale, this.dscLogo.height* this.logoScale);\n\n    ctx.textBaseline = \"bottom\";\n    // ctx.textAlign = \"center\";\n    ctx.fillText(\n      \"Developer Student Clubs\",\n      canvasWidth/2 - (ctx.measureText(\"Developer Student Clubs\").width / 2),\n      this.dscLogo.height * this.logoScale + 10\n    );\n\n    ctx.font = `400 62px \"Product Sans\"`;\n    ctx.textBaseline = \"bottom\";\n    // ctx.textAlign = \"center\";\n    ctx.fillText(name, canvasWidth/2 - (ctx.measureText(name).width / 2), this.dscLogo.height * this.logoScale + 100);\n\n    this.setState({\n      fullLogoUrlVerticalOld: this.logoCanvas.toDataURL()\n    });\n  }\n}\n\nconst hidden = {\n  display: \"none\"\n};\n\nexport default DSCEditor;","import React from 'react';\nimport GDGEditor from './GDGEditor'\nimport DSCEditor from './DSCEditor'\nimport { AppBar, Box, Container, Tabs, Tab } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`scrollable-auto-tabpanel-${index}`}\n\t\t\taria-labelledby={`scrollable-auto-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box p={3}>\n\t\t\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</Container>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid: `scrollable-auto-tab-${index}`,\n\t\t'aria-controls': `scrollable-auto-tabpanel-${index}`,\n\t};\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\twidth: '100%',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n}));\n\nexport default function ScrollableTabsButtonAuto() {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"GDG\" {...a11yProps(0)} />\n\t\t\t\t\t<Tab label=\"DSC\" {...a11yProps(1)} />\n\t\t\t\t\t{/* <Tab label=\"DevFest\" {...a11yProps(2)} /> */}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t<GDGEditor/>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\t<DSCEditor/>\n\t\t\t</TabPanel>\n\t\t\t{/* <TabPanel value={value} index={2}>\n\t\t\t\tItem Three\n\t\t\t</TabPanel> */}\n\t\t</div>\n\t);\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#556cd6',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#19857b',\n\t\t},\n\t\terror: {\n\t\t\tmain: red.A400,\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#fff',\n\t\t},\n\t},\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n\t<ThemeProvider theme={theme}>\n\t\t{/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t<>\n\t\t<CssBaseline />\n\t\t<App />\n\t\t</>\n\t</ThemeProvider>\n\t,\n\tdocument.querySelector('#root'),\n);"],"sourceRoot":""}